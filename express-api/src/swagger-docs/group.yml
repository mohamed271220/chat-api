openapi: 3.0.0
info:
  title: Group Management API
  version: 1.0.0
  description: API for managing groups and users within those groups.
tags:
  - name: Groups
    description: Operations related to group management
paths:
  /api/v1/groups:
    post:
      tags:
        - Groups
      summary: Create a new group
      description: Creates a new group with the specified name and members.
      operationId: createGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the group
                members:
                  type: array
                  items:
                    type: string
                  description: List of user IDs to add as members
      responses:
        '201':
          description: Group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  group:
                    type: object
                    description: The created group object
        '401':
          description: Unauthorized

    get:
      tags:
        - Groups
      summary: Get all groups for the authenticated user
      description: Fetches all groups the user is a member of.
      operationId: getAllGroups
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            example: 0
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Groups fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  groups:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
        '401':
          description: Unauthorized

  /api/v1/groups/{groupId}:
    get:
      tags:
        - Groups
      summary: Get a specific group
      description: Fetches details of a specific group by ID.
      operationId: getGroup
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group to fetch
          schema:
            type: string
      responses:
        '200':
          description: Group fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  group:
                    type: object
        '404':
          description: Group not found
        '401':
          description: Unauthorized

    put:
      tags:
        - Groups
      summary: Update a group's name
      description: Updates the name of an existing group.
      operationId: updateGroup
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the group
      responses:
        '200':
          description: Group updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  group:
                    type: object
        '401':
          description: Unauthorized
        '404':
          description: Group not found

    delete:
      tags:
        - Groups
      summary: Delete a group
      description: Deletes a specific group by ID.
      operationId: deleteGroup
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group to delete
          schema:
            type: string
      responses:
        '200':
          description: Group deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: Group not found

  /api/v1/groups/{groupId}/users:
    post:
      tags:
        - Groups
      summary: Add a user to a group
      description: Adds an existing user to a specific group.
      operationId: addUserToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group to add a user to
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user to add to the group
      responses:
        '200':
          description: User added to group successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  group:
                    type: object
        '401':
          description: Unauthorized
        '404':
          description: Group not found

    get:
      tags:
        - Groups
      summary: Get all users in a group
      description: Fetches all users who are members of a specific group.
      operationId: getUsersInGroup
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group to fetch users from
          schema:
            type: string
      responses:
        '200':
          description: Users fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  users:
                    type: array
                    items:
                      type: object
        '404':
          description: Group not found

  /api/v1/groups/{groupId}/users/{userId}:
    delete:
      tags:
        - Groups
      summary: Remove a user from a group
      description: Removes a specified user from a specific group.
      operationId: removeUserFromGroup
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group to remove a user from
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: The ID of the user to remove from the group
          schema:
            type: string
      responses:
        '200':
          description: User removed from group successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: Group or User not found

    put:
      tags:
        - Groups
      summary: Make a user an admin of a group
      description: Promotes a specified user to admin in a specific group.
      operationId: makeUserAdmin
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: The ID of the user to promote to admin
          schema:
            type: string
      responses:
        '200':
          description: User is now an admin of the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  group:
                    type: object
        '401':
          description: Unauthorized
        '404':
          description: Group or User not found
